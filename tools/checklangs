#!/usr/bin/python2
import os
import re
import sys

re_revision = re.compile('^#* *Revision: (\d+)', re.IGNORECASE | re.MULTILINE)

def textpath(lang, text):
	return os.path.join(lang, 'text', text)

def getrev(path):
	data = file(path).read()
	m = re_revision.search(data)
	if m:
		return int(m.group(1))
	return 0

def load_messages(lang):
	messages = { }
	for line in file(lang+'/messages'):
		line = line.strip()
		if line[0] == '#':
			continue
		line = line.split('|', 2)
		messages[line[0]] = (line[1], line[2])
	return messages

base = os.path.dirname(sys.argv[0]) + '/../lang'
os.chdir(base)

allgood = True

texts = { }
for text in os.listdir('en_US/text'):
	if text == 'messages':
		continue
	path = textpath('en_US', text)
	texts[text] = getrev(path)

messages = load_messages('en_US')
	
for lang in sorted(os.listdir('.')):
	if lang == 'en_US':
		continue
	oldtexts = 0
	for text in sorted(texts.keys()):
		path = textpath(lang, text)
		if not os.path.exists(path):
			oldtexts += 1
		else:
			rev = getrev(path)
			if rev != texts[text]:
				oldtexts += 1
	try:
		langmsgs = load_messages(lang)
	except IOError:
		langmsgs = { }
	oldmsgs = 0
	for key in messages:
		try:
			msg = langmsgs[key]
		except KeyError:
			oldmsgs += 1
		else:
			if messages[key][0] != msg[0]:
				oldmsgs += 1
	if oldtexts or oldmsgs:
		print 'Translation', lang, 'is out of date:',
		if oldtexts:
			print oldtexts, oldtexts == 1 and 'old text' or 'old texts',
		if oldmsgs:
			print oldmsgs, oldmsgs == 1 and 'old message' or 'old messages',
		print
		allgood = False
	else:
		print 'Translation', lang, 'appears up to date'

if allgood:
	print 'No language files appear out of date.'
