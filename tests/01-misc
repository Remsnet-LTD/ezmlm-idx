# $Id$

if ${ECHO} -n | grep n > /dev/null 2>&1; then
	prompt() {
		${ECHO} "$*\c"
	}
else
	prompt() {
		${ECHO} -n "$*"
	}
fi

if ps auxw > /dev/null 2>&1; then
	PS='ps auxw'
else
	PS='ps -ef'
fi

if (whoami) > /dev/null 2>&1; then
	USER=`whoami`
elif (id) > /dev/null 2>&1; then
	USER=`id | cut -d'(' -f2 | cut -d')' -f1`
# the remaining two tests work only if "su -" was used
# perhaps delete them
elif (logname) > /dev/null 2>&1; then
	USER=`logname`
elif (who am i) > /dev/null 2>&1; then
	USER=`who am i | cut -d' ' -f1 | cut -d'!' -f2`
else
	${ECHO} "Could not determine current user name, using 'nobody'"
	USER='nobody'
fi

SQLUSER=''	# must be empty
ARR='-------------------->'
ALLOW='allow'
DENY='deny'
DASH='-'
# switch for ezmlm-return
DLC='-d'
DUC='-D'
# file for ezmlm-request testing
REQ="${DIR}/__req"
# Set if we've found bug from old version
BUG=''
# Use RDBMS, set if -p was specified even if PW empty, e.g. Postgres
USESQL=''
# process arguments

SECT="1"
while [ ! -z "$1" ]; do		# not everyone has getopt :-(
	case "$1" in
		-/)
			DASH='-/'; shift;;
		-d)
			DB="$2"; shift; shift;;
		-h)
			SQLHOST="$2"; shift; shift;;
		-l)
			SQLUSER="$2"; shift; shift;;
		-p)
			PW="$2"; USESQL=1; shift; shift;;
		-u)
			SQLUSR="$2"; shift; shift;;
		-s)
			SECT="$2"; shift; shift;;
		-t)
			TABLE="$2"; shift; shift;;
		--)
			shift; break;;
		*)
			${ECHO} "$i"
			${ECHO} "Usage: ezmlm-test [-/] [-u user]" \
				"[-p sqlpassword [-l sqluser] [-d sqldb]" \
				"[-t sqltable] [-h sqlhost]] [-s section]"
			${ECHO}
			${ECHO} "args have to be separated from switches!"
			${ECHO}
			${ECHO} "defaults: -d ezmlm"
			${ECHO} "          -h [empty => RDBMS default]"
			${ECHO} "          -l eztest or -u arg if specified"
			${ECHO} "          -p [empty - don't use SQL support]"
			${ECHO} "          -s 1 [run test from beginning]"
			${ECHO} "          -t list"
			${ECHO} "          -u eztest"
			${ECHO}
			exit 99;;
	esac
done

if [ -z "$SQLUSER" ]; then
	SQLUSER="$SQLUSR"
fi

LOC="$USER-$LIST"
# calculate position in LOCAL where [normally] default starts
LOCLEN=`${ECHO} "$LOC-" | ${WC} -c | ${SED} 's/ //g'`
REJLEN=`${ECHO} "$LOC-reject-" | ${WC} -c | ${SED} 's/ //g'`
ACCLEN=`${ECHO} "$LOC-accept-" | ${WC} -c | ${SED} 's/ //g'`

DOT="$PWD/dot.qmail$DASH$LIST"

if [ "$SECT" != "1" ]; then
	${ECHO} "Starting with section $SECT ..."
fi
 
# test addresses. These are all within the list dir and all addresses
# are subaddresses of the list address. You can change this, but it is
# usually pointless.
SINK='sink'
SINKDIR="${DIR}/${SINK}"
SND="${LOC}-${SINK}"

# moddir
MODACC='modacc'
MODDIR="${DIR}/${MODACC}"
MOD="$LOC-${MODACC}"

# digdir
DIGGG='dig'
DIGDIR="${DIR}/${DIGGG}"
DIG="$LOC-${DIGGG}"

# mandir
MANAG="man"
MANDIR="${DIR}/${MANAG}"
MAN="$LOC-${MANAG}"

# bouncedir
BOUNCE='bnc'
BNC="$LOC-bnc"

HOST=`hostname -f`

if [ ! -x "${EZBIN}/ezmlm-make" ]; then
	${ECHO} "can't execute ${EZBIN}/ezmlm-make. Most likely, user ``$USER''"
	${ECHO} "doesn't have execute permission to files in directory"
	${ECHO} "``${EZBIN}''. Adjust permissions or edit the script to"
	${ECHO} "use a different test user."
	exit 99
fi

########################
# remove old test list #
########################
if [ "$SECT" = "1" ]; then
  if [ $USESQL ]; then
	${EZBIN}/ezmlm-unsub "${DIR}/digest" "${MAN}@$HOST" "${DIG}@$HOST" \
		>"$ERR" 2>&1
	${EZBIN}/ezmlm-unsub "${DIR}/mod" "${MOD}@$HOST" \
		>"$ERR" 2>&1
	${EZBIN}/ezmlm-unsub "${DIR}/${ALLOW}" "aaa@bbb" "ccc@ddd" "eee@fff" \
		>"$ERR" 2>&1
  fi
  ${RM} -rf "$DIR" ${DOT}* "${ERR}" >/dev/null 2>&1
fi
${ECHO}

#################
# check version #
#################

# assume ezmlm-idx and ezmlm-test are different versions
SAME_VER='n'

TMP_VER=`${EZBIN}/ezmlm-make -V 2>&1` || \
	fatal "This program only works with ezmlm-idx"
# ezmlm-idx-0313 does not support DEFAULT, so no sense testing it
THIS_VER=`${ECHO} "$TMP_VER" | cut -d'+' -f2`
${ECHO} "$THIS_VER" | ${GREP} "ezmlm-idx" > /dev/null 2>&1 ||
  THIS_VER=`${ECHO} "$TMP_VER" | cut -d' ' -f4`

${ECHO} "testing ezmlm-idx:    $THIS_VER"
${ECHO} "Using FQDN host name: $HOST"

${ECHO} "$THIS_VER" | ${GREP} "$OLD_VER" >/dev/null 2>&1
if [ "$?" = "0"	]; then
	DLC=''
	DUC=''
	EZVER='31'
	ALLOW='extra'		# support old nomenclature
	DENY='blacklist'
else
	${ECHO} "$THIS_VER" | ${GREP} "$VER" >/dev/null 2>&1
	if [ "$?" != "0" ]; then
		${ECHO} "Warning: ezmlm-make version is not $VER"
		${ECHO} "         test info may not be reliable"
		${ECHO}
	fi
########## should add testing of From line logging for non-0.31x
	SW_FROM="-f"
fi

# Set BADUNSET if unset doesn't do the job

A='a'
export A
${UNSET} A
[ -z "$A" ] || BADUNSET='y'

${UNSET} DEFAULT

QMAILQUEUE="$QQTEST"
export QMAILQUEUE
